1. 

Starting capacity = 8
Starting size = 0
array will double in capacity each time a new item is added to an already full
dynamic array

32 consecutive push operations

Add operation		Cost
1			1
2			1	
3			1	
4			1	
5			1
6			1
7			1
8			1
9			8 (copy) + 1
10			1
11			1
12			1
13			1
14			1
15			1
16			1
17			16 (copy) + 1
18			1	
19			1
20			1
21			1
22			1
23			1
24			1
25			1
26			1
27			1
28			1
29			1
30			1
31			1
32			1

Total Cost = 56
Cost Average = 56/32 = 1.75
Big Oh Complexity is O(1)

2.
Starting capacity = 8
starting size = 0
array will grow by a constant 2 spaces each time a new item is added to an already full
dynamic array

32 consecutive pushes

Add operation		Cost
1			1
2			1	
3			1	
4			1	
5			1
6			1
7			1
8			1
9			8 (copy) + 1
10			1
11			10 (copy) + 1
12			1
13			12 (copy) + 1
14			1
15			14 (copy) + 1
16			1
17			16 (copy) + 1
18			1
19			18 (copy) + 1
20			1
21			20 (copy) + 1
22			1
23			22 (copy) + 1
24			1
25			24 (copy) + 1
26			1
27			26 (copy) + 1
28			1
29			28 (copy) + 1
30			1
31			30 (copy) + 1
32			1

Total Cost = 260
Big Oh Complexity = O(N)


3.

Push values until capacity is full. Pop half the values. 
To avoid this, half, the N/2 so it shrinks by N/4 instead.

